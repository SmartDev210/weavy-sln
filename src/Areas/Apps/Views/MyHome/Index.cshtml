@model Weavy.Areas.Apps.Models.MyHomeViewModel

@{
    Title = T["Start"].ToString();
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section navbar_left {

    <div class="navbar-icons">
        <a class="btn btn-icon" href="@WeavyContext.ApplicationPath">@Html.IconImg(24)</a>
        <form action="@(Url.Action<HomeController>(c => c.Search(null, null)))" method="get" class="main-search navbar-search-box" data-turboform>
            <div class="form-group" role="search">
                <input id="weavy-main-search" class="form-control" type="search" name="q" value="" placeholder="@T["Search"]" />
                <button type="submit" class="btn btn-icon">@Svg.Icon("magnify")</button>
            </div>
        </form>
    </div>
}

@section navbar_middle {
    @Html.Partial("_NavbarMenu")
}


<div class="container d-flex flex-column my-4">
    <div class="d-flex top-notification-panel">
        <div class="homepage-notification-box">
            <header class="navbar navbar-light sticky-top">
                <h6 class="navbar-title mr-auto px-1">@T["Notifications"]</h6>
                <button type="button" class="btn btn-icon btn-primary mr-1" data-read="notifications" title="@T["Mark all as read"]">@Svg.Icon("check-all")</button>
            </header>
            @if (Model.Notifications.Count() == 0)
            {
                <div class="container-fluid mt-3 empty">
                    <p class="text-center text-muted">@T["All caught up :)"]</p>
                </div>
            }

            <div class="list-group list-group-flush">
                @foreach (var notification in Model.Notifications)
                {
                    Html.RenderPartial("~/Views/Notification/_Notification.cshtml", notification);
                }
            </div>
        </div>

        <div class="homepage-notification-box">
            <header class="navbar navbar-light sticky-top">
                <h6 class="navbar-title mr-auto px-1">@T["Stars"]</h6>
            </header>
            @if (!Model.Stars.Any())
            {
                <div class="container-fluid mt-3 empty">
                    <p class="text-muted">@T["You don't have any starred items yet. By starring your favorite content, things you need to remember etc, it will be listed here for quick access."]</p>
                </div>
            }
            else
            {
                <table class="table table-hover table-name">
                    <tbody>
                        @foreach (var entity in Model.Stars)
                        {
                            Html.RenderPartial("~/Views/Star/_Star.cshtml", entity);
                        }
                    </tbody>
                </table>
            }
        </div>
    </div>
    <div class="d-flex top-notification-panel">
        <div class="homepage-notification-box jitsi-video">
            Jitsi Video Lounge Placeholder
        </div>

        <div class="homepage-notification-box jitsi-video">
            Live Video Shows Placeholder
        </div>
    </div>
    <h5 class="d-flex">
        <a href="@(Url.Action<SpaceController>(c => c.Index(null, null)))" class="text-hyphens">@T["Spaces"] (Joined)</a>
        <a href="@(Url.Action<SpaceController>(c => c.New()))" class="btn btn-icon ml-auto" title="@T["Add space"]">@Svg.Icon("plus-box-outline")</a>
    </h5>

    @if (Model.JoinedSpaces.Any())
    {
        <div class="space-cards">
            @foreach (var space in Model.JoinedSpaces)
            {
                <a class="card" href="@space.Url()">
                    <div class="card-cover">
                        @space.AvatarImg(64)
                        <div class="facepile">
                            @SpaceService.GetMembers(space.Id, new MemberQuery { Top = 5, OrderBy = "Random" }).Facepile(size: 24)
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="card-title text-truncate" title="@space.Name">@space.Name</div>
                    </div>
                    @Html.StarToggle(space)
                </a>
            }
        </div>
    }
    else
    {
        <p class="text-muted">
            @T["All your spaces will show up here."]
            <a href="@(Url.Action<SpaceController>(c => c.New()).ToLower())">@T[@"We suggest creating your first space to get started."]</a>
        </p>
    }


    @if (Model.PodsSpaces.Any())
    {
        <h5 class="d-flex mt-5">
            <a href="@(Url.Action<SpaceController>(c => c.Index(null, null)))" class="text-hyphens">Pods</a>
        </h5>

        <div class="space-cards">
            @foreach (var space in Model.PodsSpaces)
            {
                <a class="card" href="@space.Url()">
                    <div class="card-cover">
                        @space.AvatarImg(64)
                        <div class="facepile">
                            @SpaceService.GetMembers(space.Id, new MemberQuery { Top = 5, OrderBy = "Random" }).Facepile(size: 24)
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="card-title text-truncate" title="@space.Name">@space.Name</div>
                    </div>
                    @Html.StarToggle(space)
                </a>
            }
        </div>
    }


    @if (Model.GigsSpaces.Any())
    {
        <h5 class="d-flex mt-5">
            <a href="@(Url.Action<SpaceController>(c => c.Index(null, null)))" class="text-hyphens">Gigs</a>
        </h5>
        <div class="space-cards">
            @foreach (var space in Model.GigsSpaces)
            {
                <a class="card" href="@space.Url()">
                    <div class="card-cover">
                        @space.AvatarImg(64)
                        <div class="facepile">
                            @SpaceService.GetMembers(space.Id, new MemberQuery { Top = 5, OrderBy = "Random" }).Facepile(size: 24)
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="card-title text-truncate" title="@space.Name">@space.Name</div>
                    </div>
                    @Html.StarToggle(space)
                </a>
            }
        </div>
    }
    <h5 class="d-flex mt-5">
        <a href="@(Url.Action<SpaceController>(c => c.Index(null, null)))" class="text-hyphens">Public Clubs (Joinable)</a>
    </h5>

    @if (Model.PubSpaces.Any())
    {
        <div class="space-cards">
            @foreach (var space in Model.PubSpaces)
            {
                <a class="card" href="@space.Url()">
                    <div class="card-cover">
                        @space.AvatarImg(64)
                        <div class="facepile">
                            @SpaceService.GetMembers(space.Id, new MemberQuery { Top = 5, OrderBy = "Random" }).Facepile(size: 24)
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="card-title text-truncate" title="@space.Name">@space.Name</div>
                    </div>
                    @Html.StarToggle(space)
                </a>
            }
        </div>
    }
    else
    {
        <p class="text-muted">
            @T["All your spaces will show up here."]
            <a href="@(Url.Action<SpaceController>(c => c.New()).ToLower())">@T[@"We suggest creating your first space to get started."]</a>
        </p>
    }
</div>
@{ /*
 <div class="container d-flex flex-column my-4">

     <h5 class="d-flex">
         <a href="@(Url.Action<PeopleController>(c => c.Index(null, null)))" class="text-hyphens">@T["People"]</a>
         @if (PermissionService.HasPermission(Permission.Manage)) {
             <a class="btn btn-icon ml-auto" href="@(Url.Action<PeopleController>(c => c.New()))" title="@T["Add user"]">@Svg.Icon("account-plus")</a>
         }
     </h5>

     <div class="facepile facepile-lg">
         @Model.People.Facepile(size: 48, link: true)
         @if (Model.People.HasNextPage) {
             <a href="@(Url.Action<PeopleController>(c => c.Index(null, null)))" class="btn btn-round btn-light" title="@T["More people"]">@Svg.Icon("dots-horizontal", color: "icon")</a>
         }
     </div>
 </div>
*/}