@using System.Text.RegularExpressions
@using Weavy.Areas.CustomPages.Controllers
@{
    var navtitle = WeavyContext.Space?.Name ?? Title;
    if (WeavyContext.Space != null) {
        EntityService.Visit(WeavyContext.Space);
    }
    var visited = SpaceService.GetVisited(6);
}

<div class="navbar-middle d-framed">
    @Html.StarToggle(WeavyContext.Space)
    <a href="@(WeavyContext.Space?.Url() ?? Url.Action<MyHomeController>(c => c.AviationClubhouse()))" class="navbar-text">
        @navtitle
        @if (WeavyContext.Space?.Teamname != null) {
            <small class="d-none d-sm-inline">@@@WeavyContext.Space.Teamname</small>
        }
    </a>
</div>

<div class="navbar-middle d-standalone customized-middle-navbar">
    @Html.StarToggle(WeavyContext.Space)
    <div class="dropdown navbar-menu dropdown-backdrop">
        <button type="button" class="btn dropdown-toggle" data-toggle="dropdown">
            <span class="navbar-text">@navtitle</span>
            @Svg.Icon("menu-down")
        </button>
        <div class="dropdown-menu">
            <div class="scroll-y">
                <div class="dropdown-header">
                    @Html.StarToggle(WeavyContext.Space)
                    <div class="dropdown">
                        <span class="navbar-text">@navtitle</span>
                        @Svg.Icon("menu-up")
                    </div>
                </div>
                <a class="dropdown-item@(ActionName == nameof(MyHomeController.ClubhouseAviationMarketplace) && ControllerName == typeof(MyHomeController).ControllerName() && AreaName.IsNullOrEmpty() ? " active" : "")" href="@(Url.Action<MyHomeController>(c => c.ClubhouseAviationMarketplace()))">
                    @Html.IconImg(24)<span>@T["Start"]</span>
                </a>
                @if (visited.Any())
                {
                    <div class="dropdown-divider"></div>
                    foreach (var space in visited)
                    {
                        <a href="@space.Url()" class="dropdown-item@(space.Id == WeavyContext.Space?.Id ? " active" : "")">
                            @space.AvatarImg(24)<span>
                                @space.Name @if (space.Teamname != null)
                                {<small class="text-muted">@@@space.Teamname</small>}
                            </span>
                        </a>
                    }
                    <div class="dropdown-divider"></div>
                }
                @(Html.ActionLink<CompaniesController>(c => c.Index(), icon: "view-grid", color: "primary", text: T["Companies"].ToString(), htmlAttributes: new { @class = "dropdown-item spaces" }, active: LinkActive.Action))
                <div class="dropdown-divider"></div>
                @(Html.ActionLink<SpaceController>(c => c.Index(null, null), icon: "view-grid", color: "primary", text: T["Spaces"].ToString(), htmlAttributes: new { @class = "dropdown-item spaces" }, active: LinkActive.Action))
                @(Html.ActionLink<PeopleController>(c => c.Index(null, null), icon: "account-multiple", color: "primary", text: T["People"].ToString(), htmlAttributes: new { @class = "dropdown-item" }, active: LinkActive.Controller))

                @if (WeavyContext.Browser.Desktop)
                {
                    <a class="dropdown-item" href="@(Url.Action<Weavy.Areas.Apps.Controllers.MessengerController>(c => c.Index(null)))" target="_blank" title="@T["Open Messenger"]">
                        @Svg.Icon("message-text", color: "primary")
                        <span>@T["Messenger"]</span>
                        @Svg.Icon("open-in-new", size: 18, htmlAttributes: new { @class = "mr--1" })
                    </a>
                }

                @if (PermissionService.HasPermission(Permission.Manage))
                {
                    @(Html.ActionLink<ManageController>(c => c.Index(), icon: "settings", color: "primary", text: T["Manage"].ToString(), htmlAttributes: new { @class = "dropdown-item" }, active: LinkActive.Controller))
                }

            </div>

        </div>
    </div>
    @if (WeavyContext.Space != null)
    {
        <div>
            <a class="btn btn-icon" href="/video-call/@(Regex.Replace($"{WeavyContext.Space.Name}-{WeavyContext.Space.Id}", "[^a-zA-Z0-9- ]+", "", RegexOptions.Compiled))" target="_blank" title="Drop-In Video Chat">@Svg.Icon("video")</a>
        </div>
    }
    else
    {
        <div>
            <a class="btn btn-icon" href="/video-call/global-room" target="_blank" title="Drop-In Video Chat">@Svg.Icon("video")</a>
        </div>
    }
</div>
