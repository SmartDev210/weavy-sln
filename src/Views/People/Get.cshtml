@model User
@{
    Title = T["People"].ToString();
    Back = Url.Action<PeopleController>(c => c.Index(null, null));
    var profiledata = Html.DisplayGroups(Model.Profile, exclude: new[] { "Avatar", "Name" })?.ToHtmlString();

    
    var company = SpaceService.GetByKey($"company_{Model.Id}");
    if (company == null)
    {
        company = SpaceService.Search(new SpaceQuery { MemberId = Model.Id }).Where(x => !string.IsNullOrEmpty(x.Key) && x.Key.StartsWith("company_") && x.HasPermission(Permission.Admin, Model)).FirstOrDefault();
    }
}

@section navbar_middle {
    @Html.Partial("_NavbarMenu")
}

<div class="cover cover-bg cover-under-navbar">
    <div class="top-left">@Html.Shield(Model)</div>
    <div class="container text-center py-4">
        @Model.AvatarImg(128)
        @if (Model.Username == Model.GetTitle()) {
            <p class="pt-2 mb-0">@@@Model.Username @Html.Badge(Model)</p>
        } else {
            <p class="pt-2 mb-0">@Model.GetTitle() <small>@@@Model.Username</small> @Html.Badge(Model)</p>
        }
        @if (company != null)
        {
            <p class="pt-2 mb-0 display-4"><a style="color: white;" href="@company.Url()">@company.Name</a></p>
        }
    </div>
    @if (Request.IsAjaxRequest()) {
        <button type="button" class="btn btn-icon top-right" data-dismiss="modal">@Svg.Icon("close")</button>
    } else {
        <div class="top-right">@{ Html.RenderPartial("_UserMenu", Model);}</div>
    }
</div>

@if (profiledata.IsNullOrWhiteSpace()) {
    <div class="modal-body text-center">
        @Svg.Spinner()
    </div>
} else {
    <div class="container my-3">
        <div class="d-flex flex-wrap justify-conent-center mb-3">
            <a class="btn btn-outline-primary ml-2 mr-2">@Svg.Icon("video") Video</a>
            <a class="btn btn-outline-primary ml-2 mr-2">@Svg.Icon("forum") Message</a>
            <a class="btn btn-outline-primary ml-2 mr-2">@Svg.Icon("account-network") Space</a>
        </div>
        @Html.Raw(profiledata)
        @*
        @if (Model.Email != null) {
            <div class="display-group" data-type="string">
                <label class="font-weight-bold">@T["Email"]</label>
                <div>@Html.</div>
                <div>@Html.DisplayFor(x => Model.Email)</div>
            </div>
        }
            *@
    </div>
}
